{"version":3,"file":"static/webpack/static\\development\\pages\\items.js.a751a443262cf0ecd49e.hot-update.js","sources":["webpack:///./components/Item.js","webpack:///./lib/formatMoney.js"],"sourcesContent":["import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Link from \"next/link\";\r\nimport Title from \"./styles/Title\";\r\nimport ItemStyles from \"./styles/ItemStyles\";\r\nimport PriceTag from \"./styles/PriceTag\";\r\nimport FormatMoney from \"../lib/formatMoney\";\r\n\r\nexport default class Item extends Component {\r\n  static propTypes = {\r\n    item: PropTypes.shape({\r\n      title: PropTypes.string.isRequired\r\n    })\r\n  };\r\n\r\n  render() {\r\n    const { item } = this.props;\r\n    return (\r\n      <ItemStyles>\r\n        <Title>\r\n          <Link\r\n            href={{\r\n              pathname: \"/item\",\r\n              query: { id: item.id }\r\n            }}\r\n          >\r\n            <a>{item.title}</a>\r\n          </Link>\r\n          <PriceTag>{FormatMoney(item.price)}</PriceTag>\r\n        </Title>\r\n      </ItemStyles>\r\n    );\r\n  }\r\n}\r\n","export default function(amount) {\n  const options = {\n    style: 'currency',\n    currency: 'USD',\n    minimumFractionDigits: 2,\n  };\n  // if its a whole, dollar amount, leave off the .00\n  if (amount % 100 === 0) options.minimumFractionDigits = 0;\n  const formatter = new Intl.NumberFormat('en-US', options);\n  return formatter.format(amount / 100);\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AAOA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAFA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;;;;AAxBA;AACA;AADA;AAEA;AACA;AADA;AADA;AACA;;;;;;;;;;;;;ACVA;AAAA;AACA;AACA;AACA;AACA;AAHA;AACA;AAKA;AACA;AACA;AACA;;;;A","sourceRoot":""}